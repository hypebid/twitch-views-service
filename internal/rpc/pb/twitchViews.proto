/* protoc --go_out=. --go_opt=paths=source_relative \
--go-grpc_out=. --go-grpc_opt=paths=source_relative \
twitchViews.proto */
syntax = "proto3";

option go_package = "github.com/hypebid/go-micro-template/internal/grpc/pb";

package hypebid;

// The <ServiceName> service
service TwitchViews{
  // Used to check on the status of the service and all it's dependencies
  rpc HealthCheck(HealthRequest) returns (HealthStatus) {}
  rpc GetStreamInfo(TwitchUser) returns (StreamList) {}
}

message HealthRequest{
  string message = 1;
}

message HealthStatus{
  string transactionId = 1;
  string serviceName = 2;
  string releaseDate = 3;
  string releaseSlug = 4;
  string releaseVersion = 5;
  bool databaseOnline = 6;
  string message = 7;
}

message TwitchUser{
  string userLogin = 1;
}

message StreamInfo {
  string streamId = 1;
  string userId = 2;
  string userLogin = 3;
  string userName = 4;
  bool isLive = 5;
  int32 viewerCount = 6;
  string startedAt = 7;
  string language = 8;
  bool isMature = 9;
}

message StreamList {
  string transactionId = 1;
  repeated StreamInfo streamInfo = 2;
}